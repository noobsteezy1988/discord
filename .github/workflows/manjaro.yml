name: Create Max-Spec SSH-accessible VPS

on: [workflow_dispatch]

jobs:
  create-vps:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set up SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo service ssh restart
          
          # Set the SSH password for the runner user
          echo "runner:${{ secrets.SSH_PASSWORD }}" | sudo chpasswd
          sudo usermod -aG sudo runner
          echo "runner ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers

      - name: Get system information
        id: sysinfo
        run: |
          echo "PUBLIC_IP=$(curl -s https://api.ipify.org)" >> $GITHUB_OUTPUT
          echo "CPU_INFO=$(lscpu | grep 'Model name' | cut -f 2 -d ":")" >> $GITHUB_OUTPUT
          echo "CPU_CORES=$(nproc)" >> $GITHUB_OUTPUT
          echo "RAM_TOTAL=$(free -h | awk '/^Mem:/ {print $2}')" >> $GITHUB_OUTPUT
          echo "DISK_TOTAL=$(df -h / | awk 'NR==2 {print $2}')" >> $GITHUB_OUTPUT
          echo "DISK_AVAIL=$(df -h / | awk 'NR==2 {print $4}')" >> $GITHUB_OUTPUT

      - name: Start ngrok
        id: ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
          ngrok config add-authtoken $NGROK_AUTH_TOKEN
          ngrok tcp 22 --log=stdout > ngrok.log &
          sleep 10
          NGROK_URL=$(grep -o 'tcp://.*' ngrok.log | sed 's/tcp:\/\///')
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_OUTPUT

      - name: Display connection info and system specs
        run: |
          echo "Max-Spec VPS is ready. Connection details and specs:"
          echo "Public IP: ${{ steps.sysinfo.outputs.PUBLIC_IP }}"
          echo "SSH command: ssh runner@${{ steps.ngrok.outputs.NGROK_URL }}"
          echo "Password: ${{ secrets.SSH_PASSWORD }}"
          echo "CPU: ${{ steps.sysinfo.outputs.CPU_INFO }}"
          echo "CPU Cores: ${{ steps.sysinfo.outputs.CPU_CORES }}"
          echo "Total RAM: ${{ steps.sysinfo.outputs.RAM_TOTAL }}"
          echo "Total Disk: ${{ steps.sysinfo.outputs.DISK_TOTAL }}"
          echo "Available Disk: ${{ steps.sysinfo.outputs.DISK_AVAIL }}"
          echo "The user 'runner' has sudo privileges."

      - name: Optimize system
        run: |
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo swapoff -a
          sudo swapon -a

      - name: Keep alive
        run: |
          while true; do
            echo "Max-Spec VPS is running. Connection details:"
            echo "Public IP: ${{ steps.sysinfo.outputs.PUBLIC_IP }}"
            echo "SSH command: ssh runner@${{ steps.ngrok.outputs.NGROK_URL }}"
            echo "Password: ${{ secrets.SSH_PASSWORD }}"
            echo "CPU: ${{ steps.sysinfo.outputs.CPU_INFO }}"
            echo "CPU Cores: ${{ steps.sysinfo.outputs.CPU_CORES }}"
            echo "Total RAM: ${{ steps.sysinfo.outputs.RAM_TOTAL }}"
            echo "Total Disk: ${{ steps.sysinfo.outputs.DISK_TOTAL }}"
            echo "Available Disk: ${{ steps.sysinfo.outputs.DISK_AVAIL }}"
            echo "The user 'runner' has sudo privileges."
            sleep 300
          done
